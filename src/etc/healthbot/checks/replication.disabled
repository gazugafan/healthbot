#############
# HealthBot #
#############

#checks that there is a MySQL or MariaDB replica running well

#which MySQL user to login with. Leave blank to not specify a user.
user="root"

#the password for the MySQL user above. Leave blank to not specify a password.
password="123"

#the host of the MySQL replica server to check. Leave blank to check the local server.
host=""

#maximum number of seconds the replicant is allowed to be behind
seconds_behind_threshold=3600




#############################
# HACKERS MAY PROCEED BELOW #
#############################

mysql_command="/usr/bin/mysql"
[ ! -z "$host" ] && mysql_command+=" -h $host"
[ ! -z "$user" ] && mysql_command+=" -u $user"
[ ! -z "$password" ] && mysql_command+=" -p$password"
mysql_command+=' -Bse '
results=`$mysql_command "SHOW SLAVE STATUS\G" 2> /dev/null`

if [ ! -z "$results" ]; then
	io_running=`echo "$results" | grep Slave_IO_Running: | awk '{ print $2 }'`
	sql_running=`echo "$results" | grep Slave_SQL_Running: | awk '{ print $2 }'`
	last_error=`echo "$results" | grep Last_Error: | tr -s " " | cut -d ' ' -f 3-`
	seconds_behind=`echo "$results" | grep Seconds_Behind_Master: | awk '{ print $2 }'`
	
	[ "$io_running" != "Yes" ] && health_problems+=("Replication IO is not running")
	[ "$sql_running" != "Yes" ] && health_problems+=("Replication SQL is not running")
	[ ! -z "$last_error" ] && health_problems+=("Replication has run into the following error: $last_error")
	
	if [ -z $seconds_behind ]; then
		health_problems+=("Replication is not functioning")
	elif [ $seconds_behind = "NULL" ]; then
		health_problems+=("Replication is not functioning")
	elif [ $seconds_behind -ge $seconds_behind_threshold ]; then
		health_problems+=("Replication is $seconds_behind seconds behind")
	fi
else
	health_problems+=("Could not get replication status")
fi